<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>expert</groupId>
  <artifactId>expert</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <build>
    <sourceDirectory>src</sourceDirectory>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>	
      </plugin>
      <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-jar-plugin</artifactId>
           <version>2.4</version>
           <!-- The configuration of the plugin -->
           <configuration>
               <!-- Configuration of the archiver -->
               <archive>

                   <!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件 -->
                   <addMavenDescriptor>false</addMavenDescriptor>

                   <!-- Manifest specific configuration -->
                   <manifest>
                       <!-- 是否要把第三方jar放到manifest的classpath中 -->
                       <addClasspath>true</addClasspath>
                       <!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/ -->
                       <classpathPrefix>lib/</classpathPrefix>
                       <!-- 应用的main class -->
                       <mainClass>expert.ExpertMain</mainClass>
                   </manifest>
               </archive>                   
           </configuration>
       </plugin>
  </plugins>
  </build>
  <dependencies>
  	<dependency>
  		<groupId>junit</groupId>
  		<artifactId>junit</artifactId>
  		<version>4.11</version>
  		<scope>compile</scope>
  	</dependency>
  </dependencies>
</project>